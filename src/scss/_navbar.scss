//
// Navbar
//

.navbar {
  // TODO remove this block after upgrading Bootstrap to v4 beta
  align-items: center;
  flex-direction: unset;
  flex-wrap: wrap;
  justify-content: space-between;

  // TODO remove this block after upgrading Bootstrap to v4 beta
  > .container,
  > .container-fluid {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;

    // TODO remove this block after upgrading Bootstrap to v4 beta
    // Bugfix from BS4 alpha-6 that causes inner navbar contents within
    // .container's to not span the full width of the navbar
    @include media-breakpoint-down(nth(map-keys($grid-breakpoints), 1)) {
      margin-left: 0;
      margin-right: 0;
      width: 100%;
    }
  }

  // Make things behave the way we expect them to--vertical centering of
  // supported inner navbar items
  .navbar-brand,
  .navbar-text,
  .navbar-nav .nav-link,
  .form-inline {
    align-items: center;
    display: flex;
  }

  // Allow padding around forms within navbars to be adjusted
  .form-inline {
    padding-bottom: $navbar-form-inline-padding-y;
    padding-top: $navbar-form-inline-padding-y;
  }
}


//
// Navbar brand
//

.navbar-brand {
  // Allow customization of brand font size
  font-size: $navbar-brand-font-size;
  font-weight: bold;
  line-height: 1.2;
  // Allow customization of space between .navbar-brand and other navbar items
  margin-right: $navbar-brand-margin-right;
  // Fix where Bootstrap doesn't properly utilize $navbar-brand-padding-y
  padding-bottom: $navbar-brand-padding-y;
  padding-top: $navbar-brand-padding-y;

  @include media-breakpoint-up(sm) {
    font-size: $navbar-brand-font-size-sm;
    margin-right: $navbar-brand-margin-right-sm;
  }
}


//
// Navbar nav
//

.navbar-nav {
  .nav-link {
    // Mimic .btn hover transitions
    @include transition($btn-transition);
    font-size: $navbar-nav-link-font-size;
    font-weight: bold;
    letter-spacing: $letter-spacing-base;
    line-height: $navbar-nav-link-line-height;
    padding: $navbar-nav-link-padding-y $navbar-nav-link-padding-x;
    text-transform: uppercase;

    @include hover-focus-active {
      text-decoration: none; // unset underline
    }

    &:focus {
      // Unset for navbar links
      outline: 0;
    }

    &.active {
      text-decoration: none; // unset underline
    }
  }
}


//
// Responsive navbar
//

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orienation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  align-self: unset; // TODO remove line after upgrading to BS4 beta
  border-width: $navbar-toggler-border-width;
  margin-bottom: $navbar-toggler-margin-y;
  margin-top: $navbar-toggler-margin-y;

  &:not(.collapsed):focus {
    outline: 0;
  }
}

// Custom class for descriptive text within .navbar-toggler
.navbar-toggler-text {
  display: inline-block;
  font-size: $navbar-toggler-text-font-size;
  font-weight: bold;
  text-transform: uppercase;
  vertical-align: middle;

  &:hover {
    cursor: inherit;
  }
}

// Hamburger icon within toggle button
.navbar-toggler-icon {
  // Allow toggler icon dimensions to be configurable (Bootstrap assigns fixed
  // em values here)
  height: $navbar-toggler-icon-height;
  width: $navbar-toggler-icon-width;
}


// Generate series of `.navbar-toggleable-*` responsive classes for configuring
// where your navbar collapses.
//
// TODO remove duplicate code/clean up selectors within media queries after upgrading to BS4 beta
.navbar-toggleable,
.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        > .container,
        > .container-fluid {
          padding-right: 0;
          padding-left: 0;
        }

        .navbar-nav {
          .dropdown-menu {
            background-color: transparent;
            border: 0 solid transparent;
            margin-top: 0;
          }

          .dropdown-item {
            @include hover-focus {
              background-color: transparent;
            }
          }

          .nav-link {
            // Allow customizable padding specific to collapsed navbar
            padding: $navbar-collapsed-nav-link-padding-y $navbar-collapsed-nav-link-padding-x;
          }
        }

        .navbar-collapse {
          &.collapse.show,
          &.collapsing {
            border-top: 1px solid;
          }
        }
      }

      @include media-breakpoint-up($next) {
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .dropdown-menu-right {
            right: 0;
            left: auto; // Reset the default from `.dropdown-menu`
          }

          .nav-link {
            // Override fixed left/right padding values set by Bootstrap.  Reset overridden
            // vertical padding values set above.
            padding: $navbar-nav-link-padding-y $navbar-nav-link-padding-x;
          }

          .nav-item,
          .nav-link {
            // Force nav link hover states to always consume 100% of the navbar
            // height, but only when the navbar is not collapsed (sets default
            // align-items: stretch)
            display: flex;
          }
        }

        // For nesting containers, have to redeclare for alignment purposes
        > .container,
        > .container-fluid {
          flex-wrap: nowrap;
        }

        .navbar-collapse {
          // scss-lint:disable ImportantRule
          display: flex !important;
          // scss-lint:enable ImportantRule

          &.collapse.show,
          &.collapsing {
            border-top: 0 solid transparent;
          }
        }

        .navbar-toggler {
          display: none;
        }
      }
    }
  }
}


//
// Navbar themes
//

.navbar-light,
.navbar-inverse {
  // scss-lint:disable SelectorDepth NestingDepth
  .navbar-nav {
    .nav-link.disabled {
      &:hover,
      &:focus {
        background-color: transparent;
      }
    }
  }
  // scss-lint:enable SelectorDepth NestingDepth
}

// Dark links against a light background
.navbar-light {
  // Primary color-specific overrides
  // scss-lint:disable SelectorDepth NestingDepth
  &.bg-primary {
    .navbar-nav {
      .nav-link {
        @include hover-focus {
          color: $white;

          &.dropdown-toggle::after {
            border-top-color: $navbar-inverse-dropdown-caret-border;
          }
        }
      }

      .show > .nav-link,
      .open > .nav-link,
      .active > .nav-link,
      .nav-link.open,
      .nav-link:hover,
      .nav-link.active,
      .nav-link:active {
        color: $white;
      }

      .show > .nav-link.dropdown-toggle::after {
        border-top-color: $white;
      }
    }
  }
  // scss-lint:enable SelectorDepth NestingDepth

  // Base light navbar styles
  .navbar-brand {
    // Allow brand hover state color to be modified separately from
    // other link colors
    @include hover-focus {
      color: $navbar-light-brand-hover-color;
    }
  }

  .navbar-nav {
    .dropdown-toggle::after {
      border-top-color: $navbar-light-dropdown-caret-border;
    }

    .nav-link {
      @include hover-focus {
        background-color: $navbar-light-hover-bg-color;
      }
    }

    // scss-lint:disable SelectorDepth NestingDepth
    .show > .nav-link,
    .open > .nav-link,
    .active > .nav-link,
    .nav-link.open,
    .nav-link:hover,
    .nav-link.active,
    .nav-link:active {
      background-color: $navbar-light-hover-bg-color;
    }

    .show > .nav-link.dropdown-toggle::after {
      border-top-color: $navbar-light-hover-color;
    }
    // scss-lint:enable SelectorDepth NestingDepth
  }

  .navbar-toggler {
    &:not(.collapsed) {
      background-color: $navbar-light-toggler-border;

      // scss-lint:disable SelectorDepth NestingDepth
      .navbar-toggler-text {
        color: $navbar-inverse-hover-color; // intentionally using -inverse variable here
      }

      .navbar-toggler-icon {
        background-image: $navbar-inverse-toggler-bg; // intentionally using -inverse variable here
      }
      // scss-lint:enable SelectorDepth NestingDepth
    }
  }
}

// White links against a dark background
.navbar-inverse {
  .navbar-brand {
    // Allow brand hover state color to be modified separately from
    // other link colors
    @include hover-focus {
      color: $navbar-inverse-brand-hover-color;
    }
  }

  .navbar-nav {
    .dropdown-toggle::after {
      border-top-color: $navbar-inverse-dropdown-caret-border;
    }

    .nav-link {
      @include hover-focus {
        background-color: $navbar-inverse-hover-bg-color;
      }
    }

    // scss-lint:disable SelectorDepth NestingDepth
    .show > .nav-link,
    .open > .nav-link,
    .active > .nav-link,
    .nav-link.open,
    .nav-link:hover,
    .nav-link.active,
    .nav-link:active {
      background-color: $navbar-inverse-hover-bg-color;
    }

    .dropdown.show .dropdown-toggle::after {
      border-top-color: $navbar-inverse-hover-color;
    }
    // scss-lint:enable SelectorDepth NestingDepth
  }

  .navbar-toggler {
    &:not(.collapsed) {
      background-color: $navbar-inverse-toggler-border;

      // scss-lint:disable SelectorDepth NestingDepth
      .navbar-toggler-text {
        color: $navbar-light-hover-color; // intentionally using -light variable here
      }

      .navbar-toggler-icon {
        background-image: $navbar-light-toggler-bg; // intentionally using -light variable here
      }
      // scss-lint:enable SelectorDepth NestingDepth
    }
  }
}
